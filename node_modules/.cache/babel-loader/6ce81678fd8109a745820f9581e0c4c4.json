{"remainingRequest":"C:\\Users\\85219\\Desktop\\vue_test\\AlaskaVue\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\85219\\Desktop\\vue_test\\AlaskaVue\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\85219\\Desktop\\vue_test\\AlaskaVue\\src\\store\\mutations.js","dependencies":[{"path":"C:\\Users\\85219\\Desktop\\vue_test\\AlaskaVue\\src\\store\\mutations.js","mtime":1567492722000},{"path":"C:\\Users\\85219\\Desktop\\vue_test\\AlaskaVue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\85219\\Desktop\\vue_test\\AlaskaVue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\85219\\Desktop\\vue_test\\AlaskaVue\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["/**\r\n * Vuex의 state 값을 변경하는 로직\r\n * 안에 정의된 로직들이 순차적으로 일어나야 각 컴포넌트의 반영 여부를 제대로 추적할 수 있음\r\n * commit을 통해서 제어됨\r\n *\r\n * Getter 차이\r\n *  1. 인자를 받아 Vuex에 전달 가능\r\n *  2. computed가 아닌 methods에 등록\r\n *\r\n *  Action 차이\r\n *  1. Mutations는 동기적 로직을 정의\r\n *  2. Action은 비동기적 로직을 정의\r\n *\r\n *  예) 사용 예\r\n *  this.@store.commit('addCounter')\r\n */\nexport var mutations = {\n  /**\r\n   * 예제\r\n  addCounter: function(state, payload) {\r\n      logUtil.log(payload);\r\n      return state.counter++;\r\n  }\r\n   */\n};",{"version":3,"sources":["C:\\Users\\85219\\Desktop\\vue_test\\AlaskaVue\\src\\store\\mutations.js"],"names":["mutations"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAgBA,OAAO,IAAMA,SAAS,GAAG;AACrB;;;;;;;AADqB,CAAlB","sourcesContent":["/**\r\n * Vuex의 state 값을 변경하는 로직\r\n * 안에 정의된 로직들이 순차적으로 일어나야 각 컴포넌트의 반영 여부를 제대로 추적할 수 있음\r\n * commit을 통해서 제어됨\r\n *\r\n * Getter 차이\r\n *  1. 인자를 받아 Vuex에 전달 가능\r\n *  2. computed가 아닌 methods에 등록\r\n *\r\n *  Action 차이\r\n *  1. Mutations는 동기적 로직을 정의\r\n *  2. Action은 비동기적 로직을 정의\r\n *\r\n *  예) 사용 예\r\n *  this.@store.commit('addCounter')\r\n */\r\nexport const mutations = {\r\n    /**\r\n     * 예제\r\n    addCounter: function(state, payload) {\r\n        logUtil.log(payload);\r\n        return state.counter++;\r\n    }\r\n     */\r\n}"]}]}