{"remainingRequest":"C:\\Users\\85219\\Desktop\\AlaskaVue\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\85219\\Desktop\\AlaskaVue\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\85219\\Desktop\\AlaskaVue\\src\\api\\sample.js","dependencies":[{"path":"C:\\Users\\85219\\Desktop\\AlaskaVue\\src\\api\\sample.js","mtime":1568079209531},{"path":"C:\\Users\\85219\\Desktop\\AlaskaVue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\85219\\Desktop\\AlaskaVue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\85219\\Desktop\\AlaskaVue\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\85219\\\\Desktop\\\\AlaskaVue\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\n\n/**\r\n *  이 폴더에는 내부 구현 API가 위치함.\r\n *  Axios(HTTP 클라이언트 라이브러리)를 통해 비동기 및 동기 처리 Sample을 구현 한다.\r\n *  npm install --save axios\r\n *  yarn add axios\r\n *  1. Axios를 통한 기본 API 통신 Templete 정의(get, post)\r\n *  2. 비동기 처리 예제\r\n *  3. 동기 처리 ( async/await ) 예제\r\n *\r\n *  todo 크로스도메인 문제\r\n *\r\n *\r\n */\nexport var sampleApi = function () {\n  var headers = {};\n  /**\r\n   * 비동기 get 통신 방법 예제\r\n   * @param callback\r\n   */\n\n  function sampleAsyncGet(_x) {\n    return _sampleAsyncGet.apply(this, arguments);\n  }\n\n  function _sampleAsyncGet() {\n    _sampleAsyncGet = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee(callback) {\n      var response, response1;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              logUtil.log(\"sampleAsyncGet\");\n              _context.prev = 1;\n              _context.next = 4;\n              return axios({\n                method: \"GET\",\n                url: \"http://10.10.78.66:18080/datapf/v1/recommendations/related/tv/series/644872\",\n                headers: {\n                  'Content-Type': 'application/json',\n                  'Content-Encoding': 'utf-8',\n                  'SUBS_ID': '65686257',\n                  'X-Domain-ID': 'CJHV',\n                  'X-SO-CODE': '43'\n                },\n                data: {\n                  rating: '',\n                  offset: '0',\n                  limit: '7'\n                }\n              });\n\n            case 4:\n              response = _context.sent;\n              logUtil.log(response);\n              _context.next = 8;\n              return axios({\n                method: \"GET\",\n                url: \"http://10.10.78.66:18080/datapf/v1/recommendations/related/tv/series/644872\",\n                headers: {\n                  'Content-Type': 'application/json',\n                  'Content-Encoding': 'utf-8',\n                  'SUBS_ID': '65686257',\n                  'X-Domain-ID': 'CJHV',\n                  'X-SO-CODE': '43'\n                },\n                data: {\n                  rating: '',\n                  offset: '0',\n                  limit: '7'\n                }\n              });\n\n            case 8:\n              response1 = _context.sent;\n              logUtil.log(response1);\n              return _context.abrupt(\"return\", response);\n\n            case 13:\n              _context.prev = 13;\n              _context.t0 = _context[\"catch\"](1);\n              logUtil.log(_context.t0);\n              return _context.abrupt(\"return\", _context.t0);\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 13]]);\n    }));\n    return _sampleAsyncGet.apply(this, arguments);\n  }\n\n  //axios.get('http://www.naver.com',{params:{}, headers: headers}).then((result) => {\n  //    logUtil.log(`function1 main :  ${result.state}`);\n  //    callback();\n  //});\n  ;\n  /**\r\n   * 비동기 post 통신 방법 예제 raw 타\r\n   * @param callback\r\n   */\n\n  function sampleAsyncPost(_x2) {\n    return _sampleAsyncPost.apply(this, arguments);\n  }\n\n  function _sampleAsyncPost() {\n    _sampleAsyncPost = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee2(callback) {\n      var response;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              logUtil.log(\"sampleAsyncPost\");\n              _context2.prev = 1;\n              _context2.next = 4;\n              return axios({\n                method: \"POST\",\n                url: \"http://10.10.78.66:18080/bizpf/v1/accounts/token\",\n                headers: {\n                  'Accept': \"*/*\",\n                  'Content-Type': 'application/x-www-form-urlencoded',\n                  'X-Client-App-Key': '9CQQR9V1UHJF87PMRUOD6JSLG4'\n                },\n                data: \"grantType=password&username=65686257&password=20%3Ad5%3Abf%3Aed%3Ae2%3A1c&authDomain=CJHV\"\n              });\n\n            case 4:\n              response = _context2.sent;\n              logUtil.log(response);\n              return _context2.abrupt(\"return\", response);\n\n            case 9:\n              _context2.prev = 9;\n              _context2.t0 = _context2[\"catch\"](1);\n              logUtil.error(_context2.t0);\n              return _context2.abrupt(\"return\", _context2.t0);\n\n            case 13:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[1, 9]]);\n    }));\n    return _sampleAsyncPost.apply(this, arguments);\n  }\n\n  ;\n  /**\r\n   * 동기 get 통신 방법 예제\r\n   * @param callback\r\n   */\n\n  function sampleGet(callback) {\n    logUtil.log(\"sampleSyncGet\");\n    axios({\n      method: \"GET\",\n      url: \"http://10.10.78.66:18080/datapf/v1/recommendations/related/tv/series/644872\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Content-Encoding': 'utf-8',\n        'SUBS_ID': '65686257',\n        'X-Domain-ID': 'CJHV',\n        'X-SO-CODE': '43'\n      },\n      data: {\n        rating: '',\n        offset: '0',\n        limit: '7'\n      },\n      async: false\n    }).then(function (result) {\n      logUtil.log(result);\n    }).catch(function (error) {\n      logUtil.error(error);\n    });\n  }\n\n  ;\n  /**\r\n   * 동기 post 통신 방법 예제\r\n   * @param callback\r\n   */\n\n  function samplePost(callback) {\n    logUtil.log(\"sampleSyncPost\");\n    axios({\n      method: \"POST\",\n      url: \"http://10.10.78.66:18080/bizpf/v1/accounts/token\",\n      headers: {\n        'Accept': \"*/*\",\n        'Content-Type': 'application/x-www-form-urlencoded',\n        'X-Client-App-Key': '9CQQR9V1UHJF87PMRUOD6JSLG4'\n      },\n      async: false,\n      data: \"grantType=password&username=65686257&password=20%3Ad5%3Abf%3Aed%3Ae2%3A1c&authDomain=CJHV\"\n    }).then(function (result) {\n      logUtil.log(result);\n    }).catch(function (error) {\n      logUtil.error(error);\n    });\n  }\n\n  return {\n    sampleAsyncGet: sampleAsyncGet,\n    sampleAsyncPost: sampleAsyncPost,\n    sampleGet: sampleGet,\n    samplePost: samplePost\n  };\n}();",{"version":3,"sources":["C:\\Users\\85219\\Desktop\\AlaskaVue\\src\\api\\sample.js"],"names":["sampleApi","headers","sampleAsyncGet","callback","logUtil","log","axios","method","url","data","rating","offset","limit","response","response1","sampleAsyncPost","error","sampleGet","async","then","result","catch","samplePost"],"mappings":"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","sourcesContent":["/**\r\n *  이 폴더에는 내부 구현 API가 위치함.\r\n *  Axios(HTTP 클라이언트 라이브러리)를 통해 비동기 및 동기 처리 Sample을 구현 한다.\r\n *  npm install --save axios\r\n *  yarn add axios\r\n *  1. Axios를 통한 기본 API 통신 Templete 정의(get, post)\r\n *  2. 비동기 처리 예제\r\n *  3. 동기 처리 ( async/await ) 예제\r\n *\r\n *  todo 크로스도메인 문제\r\n *\r\n *\r\n */\r\n\r\nexport const sampleApi = (function () {\r\n    var headers = {\r\n\r\n    };\r\n\r\n    /**\r\n     * 비동기 get 통신 방법 예제\r\n     * @param callback\r\n     */\r\n    async function sampleAsyncGet(callback) {\r\n        logUtil.log(\"sampleAsyncGet\");\r\n        try {\r\n            let response = await axios({\r\n                method: \"GET\",\r\n                url: \"http://10.10.78.66:18080/datapf/v1/recommendations/related/tv/series/644872\",\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Content-Encoding': 'utf-8',\r\n                    'SUBS_ID': '65686257',\r\n                    'X-Domain-ID': 'CJHV',\r\n                    'X-SO-CODE': '43'\r\n                },\r\n                data:{\r\n                    rating: '',\r\n                    offset: '0',\r\n                    limit: '7'\r\n                }\r\n            });\r\n            logUtil.log(response);\r\n            let response1 = await axios({\r\n                method: \"GET\",\r\n                url: \"http://10.10.78.66:18080/datapf/v1/recommendations/related/tv/series/644872\",\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Content-Encoding': 'utf-8',\r\n                    'SUBS_ID': '65686257',\r\n                    'X-Domain-ID': 'CJHV',\r\n                    'X-SO-CODE': '43'\r\n                },\r\n                data:{\r\n                    rating: '',\r\n                    offset: '0',\r\n                    limit: '7'\r\n                }\r\n            });\r\n            logUtil.log(response1);\r\n            return response;\r\n        } catch (error) {\r\n            logUtil.log(error);\r\n            return error;\r\n        }\r\n\r\n\r\n        //axios.get('http://www.naver.com',{params:{}, headers: headers}).then((result) => {\r\n        //    logUtil.log(`function1 main :  ${result.state}`);\r\n        //    callback();\r\n        //});\r\n    };\r\n\r\n    /**\r\n     * 비동기 post 통신 방법 예제 raw 타\r\n     * @param callback\r\n     */\r\n    async function sampleAsyncPost(callback) {\r\n        logUtil.log(\"sampleAsyncPost\");\r\n        try {\r\n            let response = await axios({\r\n                method: \"POST\",\r\n                url: \"http://10.10.78.66:18080/bizpf/v1/accounts/token\",\r\n                headers: {\r\n                    'Accept': \"*/*\",\r\n                    'Content-Type' : 'application/x-www-form-urlencoded',\r\n                    'X-Client-App-Key' : '9CQQR9V1UHJF87PMRUOD6JSLG4'\r\n                },\r\n                data: `grantType=password&username=65686257&password=20%3Ad5%3Abf%3Aed%3Ae2%3A1c&authDomain=CJHV`\r\n\r\n            });\r\n            logUtil.log(response);\r\n            return response;\r\n        } catch (error) {\r\n            logUtil.error(error);\r\n            return error;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * 동기 get 통신 방법 예제\r\n     * @param callback\r\n     */\r\n    function sampleGet(callback) {\r\n        logUtil.log(\"sampleSyncGet\");\r\n\r\n        axios({\r\n            method: \"GET\",\r\n            url: \"http://10.10.78.66:18080/datapf/v1/recommendations/related/tv/series/644872\",\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Content-Encoding': 'utf-8',\r\n                'SUBS_ID': '65686257',\r\n                'X-Domain-ID': 'CJHV',\r\n                'X-SO-CODE': '43'\r\n            },\r\n            data:{\r\n                rating: '',\r\n                offset: '0',\r\n                limit: '7'\r\n            },\r\n            async: false,\r\n        })\r\n            .then((result) =>{\r\n                logUtil.log(result);\r\n            })\r\n            .catch((error) => {\r\n                logUtil.error(error);\r\n            });\r\n    };\r\n\r\n    /**\r\n     * 동기 post 통신 방법 예제\r\n     * @param callback\r\n     */\r\n    function samplePost(callback) {\r\n        logUtil.log(\"sampleSyncPost\");\r\n        axios({\r\n            method: \"POST\",\r\n            url: \"http://10.10.78.66:18080/bizpf/v1/accounts/token\",\r\n            headers: {\r\n                'Accept': \"*/*\",\r\n                'Content-Type' : 'application/x-www-form-urlencoded',\r\n                'X-Client-App-Key' : '9CQQR9V1UHJF87PMRUOD6JSLG4'\r\n            },\r\n            async: false,\r\n            data: `grantType=password&username=65686257&password=20%3Ad5%3Abf%3Aed%3Ae2%3A1c&authDomain=CJHV`\r\n\r\n        })\r\n            .then((result) =>{\r\n                logUtil.log(result);\r\n            })\r\n            .catch((error) => {\r\n                logUtil.error(error);\r\n            });\r\n    }\r\n\r\n    return{\r\n        sampleAsyncGet: sampleAsyncGet,\r\n        sampleAsyncPost: sampleAsyncPost,\r\n        sampleGet: sampleGet,\r\n        samplePost: samplePost\r\n    }\r\n})();\r\n"]}]}