{"remainingRequest":"C:\\Users\\85219\\Desktop\\vue_test\\AlaskaVue\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\85219\\Desktop\\vue_test\\AlaskaVue\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\85219\\Desktop\\vue_test\\AlaskaVue\\src\\api\\webcApi.js","dependencies":[{"path":"C:\\Users\\85219\\Desktop\\vue_test\\AlaskaVue\\src\\api\\webcApi.js","mtime":1569407150228},{"path":"C:\\Users\\85219\\Desktop\\vue_test\\AlaskaVue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\85219\\Desktop\\vue_test\\AlaskaVue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\85219\\Desktop\\vue_test\\AlaskaVue\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _classCallCheck from \"C:\\\\Users\\\\85219\\\\Desktop\\\\vue_test\\\\AlaskaVue\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\85219\\\\Desktop\\\\vue_test\\\\AlaskaVue\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/createClass\";\nimport router from \"../router/index\";\nimport EtcView from \"../views/EtcView\";\n/**\r\n * WebContainer 중 Web Iframe간 통신부가 구현 된다.\r\n * 초기 구현은 WebContainer 가이드 이므로 변경 하지 않는다.\r\n *\r\n * @type {{}}\r\n */\n\nexport var WebcAPI =\n/*#__PURE__*/\nfunction () {\n  /**\r\n   * 생성자\r\n   */\n  function WebcAPI() {\n    _classCallCheck(this, WebcAPI);\n  }\n  /**\r\n   * WebContainer 부터 전달 받은 메시지가 들어오며 다른 iframe -> 현재 iframe 통신을 담당한다.\r\n   * WebContainer가 각 WebApp가 호출을 담당\r\n   * @param data\r\n   */\n\n\n  _createClass(WebcAPI, [{\n    key: \"sendMessage\",\n\n    /**\r\n     * WebApp iframe -> 타 webApp iframe 통신을 담당한다.\r\n     * id는 선 구현된 WebApp인 경우 WebContainer를 통해 획득 가능 하며 data는 타 webApp에서 정의한 형식에 맞추어 전달한다.\r\n     * @param id\r\n     * @param data\r\n     */\n    value: function sendMessage(id, data) {\n      window.parent.webc.api.iframe.sendMessage(id, data);\n    }\n    /**\r\n     * 포커스\r\n     * @param id\r\n     */\n\n  }, {\n    key: \"setFocus\",\n    value: function setFocus(id) {\n      window.parent.webc.api.iframe.setFocus(id);\n    }\n  }, {\n    key: \"receiveMessage\",\n    get: function get() {\n      logUtil.log(\"sampleHelloVue Hello World\");\n      var tdata = data;\n      logUtil.log(tdata);\n\n      if (tdata.focus === true) {\n        var startId = tdata.id;\n        logUtil.log(startId);\n        router.push(EtcView);\n        this.setFocus(startId);\n      }\n    }\n  }]);\n\n  return WebcAPI;\n}();",{"version":3,"sources":["C:\\Users\\85219\\Desktop\\vue_test\\AlaskaVue\\src\\api\\webcApi.js"],"names":["router","EtcView","WebcAPI","id","data","window","parent","webc","api","iframe","sendMessage","setFocus","logUtil","log","tdata","focus","startId","push"],"mappings":";;AAAA,OAAOA,MAAP;AACA,OAAOC,OAAP;AACA;;;;;;;AAMA,WAAaC,OAAb;AAAA;AAAA;AAEI;;;AAGA,qBAAa;AAAA;AAAE;AAEf;;;;;;;AAPJ;AAAA;;AA0BI;;;;;;AA1BJ,gCAgCgBC,EAhChB,EAgCoBC,IAhCpB,EAgC0B;AAClBC,MAAAA,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBC,GAAnB,CAAuBC,MAAvB,CAA8BC,WAA9B,CAA0CP,EAA1C,EAA8CC,IAA9C;AACH;AAED;;;;;AApCJ;AAAA;AAAA,6BAwCaD,EAxCb,EAwCiB;AACTE,MAAAA,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBC,GAAnB,CAAuBC,MAAvB,CAA8BE,QAA9B,CAAuCR,EAAvC;AACH;AA1CL;AAAA;AAAA,wBAYyB;AACjBS,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AAEA,UAAIC,KAAK,GAAGV,IAAZ;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;;AAEA,UAAGA,KAAK,CAACC,KAAN,KAAgB,IAAnB,EAAyB;AACrB,YAAIC,OAAO,GAAGF,KAAK,CAACX,EAApB;AACAS,QAAAA,OAAO,CAACC,GAAR,CAAYG,OAAZ;AACAhB,QAAAA,MAAM,CAACiB,IAAP,CAAYhB,OAAZ;AACA,aAAKU,QAAL,CAAcK,OAAd;AACH;AACJ;AAxBL;;AAAA;AAAA","sourcesContent":["import router from '../router/index'\r\nimport EtcView from \"../views/EtcView\";\r\n/**\r\n * WebContainer 중 Web Iframe간 통신부가 구현 된다.\r\n * 초기 구현은 WebContainer 가이드 이므로 변경 하지 않는다.\r\n *\r\n * @type {{}}\r\n */\r\nexport class WebcAPI {\r\n\r\n    /**\r\n     * 생성자\r\n     */\r\n    constructor(){}\r\n\r\n    /**\r\n     * WebContainer 부터 전달 받은 메시지가 들어오며 다른 iframe -> 현재 iframe 통신을 담당한다.\r\n     * WebContainer가 각 WebApp가 호출을 담당\r\n     * @param data\r\n     */\r\n    get receiveMessage() {\r\n        logUtil.log(\"sampleHelloVue Hello World\");\r\n\r\n        let tdata = data;\r\n        logUtil.log(tdata);\r\n\r\n        if(tdata.focus === true) {\r\n            let startId = tdata.id;\r\n            logUtil.log(startId);\r\n            router.push(EtcView);\r\n            this.setFocus(startId);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * WebApp iframe -> 타 webApp iframe 통신을 담당한다.\r\n     * id는 선 구현된 WebApp인 경우 WebContainer를 통해 획득 가능 하며 data는 타 webApp에서 정의한 형식에 맞추어 전달한다.\r\n     * @param id\r\n     * @param data\r\n     */\r\n    sendMessage(id, data) {\r\n        window.parent.webc.api.iframe.sendMessage(id, data);\r\n    }\r\n\r\n    /**\r\n     * 포커스\r\n     * @param id\r\n     */\r\n    setFocus(id) {\r\n        window.parent.webc.api.iframe.setFocus(id);\r\n    }\r\n}"]}]}